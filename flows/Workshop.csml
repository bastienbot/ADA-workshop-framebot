start:
  say "Bonjour {{_metadata.firstname}}"
  goto end /* On supprime cette ligne pour commencer l'exercice.
  

  // 1 - Indique au chatbot de montrer qu'il est en train d'√©crire pendant trois seconde (3000 ms)
	?????
  say "Je suis FrameBot et je vais t'aider √† ajouter de jolis cadres √† ta photo de profil Workplace."
  goto photo

photo:
  if (userPhoto == null) {
    // 2 - la condition ci-dessus v√©rifie si une photo existe d√©ja pour l'utilisateur
    //     si aucune photo n'existe, on doit l'envoyer vers l'√©tape `askPhoto`
    //     Attention il faut bien respectre les minuscule/majuscule, copie/colle ;)
   goto ?????
  }
  // 3 - Ci-dessous il manque le mot cl√© "sinon" (dans le cas ou le chatbot a d√©ja une photo en m√©moire)
  ????? {
    say "Je me souviens que tu m'as d√©ja envoy√© une photo de toi."
    // 4 - Affiche la photo que le chatbot a en m√©moire
    say Typing(3000)
    say Image(????)
  }
  goto selectFrame

askPhoto:
  say Typing(1500)
  say "Envoie-moi une photo de toi ! üì∑"
    // 5 - Demande au chatbot d'attendre que l'utilisateur envoie sa photo
  ?????
  say "C'est une belle photo, je trouve..."
    // 6 - On veut maintenant que le chatbot se souvienne de la photo
    //     en la mettant dans la variabel `userPhoto` 
  ????? userPhoto = event
  goto selectFrame


selectFrame:
  say Typing(1500)
  say "D'accord, maintenant s√©lectionnons ensemble un cadre pour ajouter sur ta photo."
  say Typing(1500)
  say "C'est l'√©t√©, tu prends bient√¥t des vacances peut-√™tre ? C'est l'occasion de le montrer !"
  remember ada_url = "https://cdn.csml.dev/customers/4140eea8-4825-4df6-981d-c1ee239884bc/files/d6cbeb4c-3e87-439a-baea-1ddff850def1/cadre-clevy-copie.png"
  remember vacances_url = "https://bit.ly/clevy-frame-vacances"
  remember plage_url = "https://bit.ly/clevy-frame-plage"
  remember summer_url = "https://bit.ly/clevy-frame-summer"

  say Carousel([
    Card(
      "ADA",
      subtitle="ADA pour montrer que t'es un.e dev.e",
      image_url=ada_url,
      buttons=[Button("S√©lectionner", payload="ada") as ada]
    ),
    // 7 - Il faut maintenant compl√©ter les autres "cartes" de Carousel
    //     pour les calques `vacances_url`, `plage_url`, `summer_url`
    ?????(
      "Les vacances",
      subtitle="Pour montrer que tu pars en cong√©s !",
      image_url=vacances_url,
      buttons=[Button("S√©lectionner", payload="vacances") as vacances]
    ),
    Card(
      "La plage",
      subtitle="Si tu prends des vacances √† la mer, choisis ce cadre !",
      image_url=?????,
      buttons=[Button("S√©lectionner", payload="plage") as plage]
    ),
    Card(
      "Summer",
      subtitle="Enfin l'√©t√© ! Ces summer vont √©gayer ta photo...",
      image_url=summer_url,
      buttons=[?????("S√©lectionner", payload="summer") as summer]
    ),
  ])
  hold
  // 8 - Une fois que l'utilisateur a cliqu√©, on doit cr√©er quatre condition qui vont chacune v√©rifier une valeur
  //     compl√®te les conditions ci-dessous
  if (????? match vacances) remember frame_url = vacances_url
  else if (????? match plage) remember frame_url = plage_url
  else if (????? match summer) remember frame_url = summer_url
  else if (????? match ada) remember frame_url = ada_url
  else {
    say "Je n'ai pas compris... choisis un des cadres propos√©s !"
    // 9 - Si l'utilisateur ne clique sur aucune des carte, on doit lui remontrer le carousel
    ????? ?????
  }

  do framed = Fn(
    "picture_frame",
    base_url=userPhoto,
    frame_url=frame_url
  )

  remember framed_url = framed.result

  say "Voil√†, ton image est pr√™te !"
  // 10 - On doit maintenant montrer la photo finale dont l'url est `framed_url`
  ????? ?????(??????)
  say Wait(3000)
  say Typing(1500)
  say "Mets-la en photo de profil pour que tes amis puissent l'admirer plus facilement !"
  say Wait(3000)

  say Typing(1500)
  say Question(
    "Reviens me voir r√©guli√®rement pour avoir de nouveaux cadres ! A bient√¥t üëã",
    button_type="quick_reply",
    buttons=[Button("Recommencer")]
  )
  goto end
